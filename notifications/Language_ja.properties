# NLS_MESSAGEFORMAT_NONE
# NLS_ENCODING=UTF-8
ExtName=(試験用) IBM Notification Service 
ExtDesc=IBM Notification Service では、電話、テキスト、および E メールなどの基本的な通信手段をご利用になれます。  
ExtMessage=このジョブ・タイプは試験用であり、フィードバックを得るために使用されます。  このジョブ・タイプの使用方法については、IBM の<a href="https://developer.ibm.com/bluemix/docs/adding-pipeline-notifications">資料</a>を参照してください。 <br><br>デフォルトでは、この拡張機能により実行時に常に通知が送信されます。 詳細は、「<b>通知テキスト</b>」フィールドおよび「<b>通知を送信</b>」フィールドの情報を確認してください。
PHONE_KEY=電話番号
PHONE_DESC=ジョブの実行時に呼び出す電話番号。   

TXT_KEY=テキスト番号
TXT_DESC=ジョブの実行時にテキスト・メッセージを送信する番号。

EMAIL_KEY=E メール・アドレス
EMAIL_DESC=ジョブの実行時に通知を送信する相手の E メール・アドレス。

SLACK_CHANNEL_KEY=Slack チャンネル
SLACK_CHANNEL_DESC=ジョブの実行時に通知を送信する相手の Slack チャンネル。

SLACK_WEBHOOK_KEY=Slack Incoming Webhook
SLACK_WEBHOOK_DESC=Incoming Webhooks は、外部ソースから Slack にメッセージを投稿するための単純な方法です。 これは、JSON ペイロードを付加した通常の HTTP 要求を利用しており、この JSON ペイロードの中にメッセージ・テキストとオプションが含まれます。  詳しくは、https://api.slack.com/incoming-webhooks を参照してください。

MESSAGE_KEY=通知テキスト
MESSAGE_DESC=通知のテキスト・コンテンツ。 <br><br>前のジョブからの情報を通知に含めたい場合は、環境変数 NOTIFY_JOB_MESSAGE をステージに追加します。 NOTIFY_JOB_MESSAGE をエクスポートして通知に含めるように前のジョブのスクリプトを構成し、この変数を含めるように「<b>通知テキスト</b>」の値を設定します。 例えば、「前のジョブ・メッセージは $NOTIFY_JOB_MESSAGE でした」とします。

ONLY_NOTIFY_KEY=通知の送信:
ONLY_NOTIFY_DESC=デフォルトでは、このステージの前のジョブすべてが正常に実行された場合、このジョブの実行時に通知が送信されます。<br><br>前のジョブが失敗したときに通知が送信されるようにするには、環境変数 NOTIFY_JOB_STATUS をステージに追加し、前のジョブで「<b>Stop stage execution on job failure</b>」を false に設定します。 前のジョブのスクリプトの NOTIFY_JOB_STATUS を、正常な場合には 0、失敗の場合には 1 としてエクスポートするように構成します。 NOTIFY_JOB_STATUS を設定すると、このジョブはこれらの値のうちのいずれかで終了するので、前の失敗によりステージの実行が停止されるようにすることができます。

ANY_KEY=常時
SUCCESS_KEY=前のジョブが成功
FAILURE_KEY=前のジョブが失敗
