# NLS_MESSAGEFORMAT_NONE
# NLS_ENCODING=UTF-8
ExtName=(Expérimental) Service IBM Notification 
ExtDesc=Les services IBM Notification fournissent les notifications de base par téléphone, message texte et e-mail. 
ExtMessage=Ce type de travail est expérimental et utilisé à des fins de retour d'informations. Pour plus d'informations sur l'utilisation de ce type de travail, consultez notre <a href="https://developer.ibm.com/bluemix/docs/adding-pipeline-notifications">documentation</a>. <br><br>Par défaut, cette extension envoie toujours des notifications lorsqu'elle est exécutée. Pour en savoir plus, consultez les informations des zones <b>Texte de la notification</b> et <b>Envoyer une notification</b>.
PHONE_KEY=Numéro de téléphone
PHONE_DESC=Numéro de téléphone à appeler lorsque le travail s'exécute. 

TXT_KEY=Numéro de message texte
TXT_DESC=Numéro auquel envoyer un message texte lorsque le travail s'exécute.

EMAIL_KEY=Adresse e-mail
EMAIL_DESC=Adresse e-mail à laquelle envoyer une notification lorsque le travail s'exécute.

SLACK_CHANNEL_KEY=Canal Slack
SLACK_CHANNEL_DESC=Canal Slack auquel envoyer une notification lorsque le travail s'exécute.

SLACK_WEBHOOK_KEY=Webhook Slack entrant
SLACK_WEBHOOK_DESC=Les Webhooks entrants sont une méthode facile qui permet de publier des messages dans Slack depuis des sources externes. Ces derniers utilisent des demandes HTTP standard avec du contenu JSON comprenant le texte du message et certaines options. Pour plus d'informations, voir https://api.slack.com/incoming-webhooks

MESSAGE_KEY=Texte de la notification
MESSAGE_DESC=Contenu textuel de la notification. <br><br>Si vous souhaitez que la notification inclut des informations d'un travail précédent, ajoutez la variable d'environnement NOTIFY_JOB_MESSAGE à l'étape. Configurez le script de travail précédent de manière à exporter NOTIFY_JOB_MESSAGE avec votre notification, et définissez la valeur de <b>Texte de la notification</b> afin qu'elle contient cette variable. Par exemple, "Le message du travail précédent était $NOTIFY_JOB_MESSAGE".

ONLY_NOTIFY_KEY=Envoyer une notification :
ONLY_NOTIFY_DESC=Par défaut, la notification est envoyée lorsque ce travail est exécuté, à condition que tous les travaux précédents de cet étape se soient exécutés avec succès.<br><br>Si vous voulez qu'une notification soit envoyée lorsqu'un travail précédent échoue, ajoutez la variable d'environnement NOTIFY_JOB_STATUS à cette étape et, sur le travail précédent, définissez l'<b>arrêt de l'exécution de l'étape en cas d'échec du travail</b> sur false. Configurez le script du travail précédent de manière à exporter NOTIFY_JOB_STATUS avec 0 en cas de réussite et 1 en cas d'échec. Si NOTIFY_JOB_STATUS est défini, ce travail existe avec l'une de ces valeurs. Ainsi, l'exécution de l'étape peut être arrêtée par un échec précédent.

ANY_KEY=Toujours
SUCCESS_KEY=Les travaux précédents ont réussi
FAILURE_KEY=Les travaux précédents ont échoué
