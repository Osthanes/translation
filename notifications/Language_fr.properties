# NLS_MESSAGEFORMAT_NONE
# NLS_ENCODING=UTF-8
ExtName=(Expérimental) IBM Notifications 
ExtDesc=Les services IBM Notification fournissent les notifications de base par téléphone, message texte et e-mail.  
ExtMessage=Ce type de travail est expérimental et utilisé à des fins de retour d'informations.  Pour plus d'informations sur l'utilisation de ce type de travail, voir notre <a href="https://developer.ibm.com/bluemix/docs/adding-pipeline-notifications">documentation</a>. <br><br>Par défaut, cette extension envoie toujours des notifications lorsqu'elle s'exécute. Pour plus d'informations concernant la modification de ce paramètre, lisez les informations en regard des zones "Envoyer une notification" et "Détails du message".
PHONE_KEY=Numéro de téléphone
PHONE_DESC=Numéro de téléphone à appeler lorsque le travail s'exécute.   

TXT_KEY=Numéro de message texte
TXT_DESC=Numéro auquel envoyer un message texte lorsque le travail s'exécute.

EMAIL_KEY=Adresse e-mail
EMAIL_DESC=Adresse e-mail à laquelle envoyer une notification lorsque le travail s'exécute.

SLACK_CHANNEL_KEY=Canal Slack
SLACK_CHANNEL_DESC=Canal Slack auquel envoyer une notification lorsque le travail s'exécute.

SLACK_WEBHOOK_KEY=Webhook Slack entrant
SLACK_WEBHOOK_DESC=Les Webhooks entrants sont une méthode facile qui permet de publier des messages dans Slack depuis des sources externes. Ces derniers utilisent des demandes HTTP standard avec du contenu JSON comprenant le texte du message et certaines options. Pour plus d'informations, voir https://api.slack.com/incoming-webhooks

MESSAGE_KEY=Détails du message
MESSAGE_DESC=Contenu de la notification. Si vous souhaitez que les notifications comprennent les informations d'un travail précédent, ajoutez une variable d'environnement NOTIFY_JOB_MESSAGE à cette étape, lancez le script de travail précédent pour exporter NOTIFY_JOB_MESSAGE avec votre message, et définissez cette valeur de sorte qu'elle contienne le message, par exemple : Le message du travail précédent était $NOTIFY_JOB_MESSAGE

ONLY_NOTIFY_KEY=Envoyer une notification :
ONLY_NOTIFY_DESC=Le comportement par défaut d'une notification est d'être envoyée lorsque le travail est en cours d'exécution, ce qui se produit lorsque les travaux précédents de cette étape ont réussi. Si vous souhaitez qu'une notification soit envoyée lorsqu'un travail précédent a échoué, ajoutez la variable d'environnement NOTIFY_JOB_STATUS à cette étape, paramétrez le travail précédent de sorte que 'Stop stage execution on job failure' soit défini sur false, et exécutez le script de travail précédent pour exporter NOTIFY_JOB_STATUS avec 0 en cas de réussite et 1 en cas d'échec.  Si NOTIFY_JOB_STATUS est défini, ce travail sera quitté avec cette valeur, permettant ainsi l'arrêt de l'exécution d'une étape par un échec précédent.

ANY_KEY=Toujours
SUCCESS_KEY=Les travaux précédents ont réussi
FAILURE_KEY=Les travaux précédents ont échoué
