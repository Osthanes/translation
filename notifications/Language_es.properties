# NLS_MESSAGEFORMAT_NONE
# NLS_ENCODING=UTF-8
ExtName=(Experimental) IBM Notification Services 
ExtDesc=IBM Notification Services proporciona notificaciones básicas por teléfono, texto y correo electrónico.  
ExtMessage=Este tipo de trabajo es experimental y se utiliza para obtener comentarios e información.  Para más información sobre cómo utilizar este tipo de trabajo, consulte nuestra <a href="https://developer.ibm.com/bluemix/docs/adding-pipeline-notifications">documentación</a>. <br><br>De forma predeterminada, esta extensión siempre envía notificaciones cuando se ejecuta. Para obtener más información, revise la información para los campos <b>Texto de la notificación</b> y <b>Enviar notificación</b>.
PHONE_KEY=Número de teléfono
PHONE_DESC=Número de teléfono al que llamar cuando se ejecuta el trabajo.   

TXT_KEY=Número de texto
TXT_DESC=Número al que enviar un mensaje de texto cuando se ejecuta el trabajo.

EMAIL_KEY=Dirección de correo electrónico
EMAIL_DESC=Dirección de correo electrónico a la que enviar la notificación cuando se ejecuta el trabajo.

SLACK_CHANNEL_KEY=Canal de demora
SLACK_CHANNEL_DESC=Canal de demora al que enviar notificaciones cuando se ejecuta el trabajo.

SLACK_WEBHOOK_KEY=Webhook entrante de demora
SLACK_WEBHOOK_DESC=Los Webhooks entrantes son una manera simple de enviar mensajes desde orígenes externos a Slack. Hacen uso de solicitudes normales HTTP con una carga útil JSON, que incluye el texto del mensaje y algunas opciones.  Para más información consulte https://api.slack.com/incoming-webhooks

MESSAGE_KEY=Texto de la notificación
MESSAGE_DESC=Contenido de texto de la notificación. <br><br>Si desea que la notificación incluya información de un trabajo previo, añada una variable de entorno NOTIFY_JOB_MESSAGE a la etapa. Configure el script del trabajo anterior para exportar NOTIFY_JOB_MESSAGE con su notificación y establezca el valor <b>Texto de la notificación</b> para que contenga esta variable. Por ejemplo, "El mensaje del trabajo anterior fue $NOTIFY_JOB_MESSAGE".

ONLY_NOTIFY_KEY=Enviar notificación:
ONLY_NOTIFY_DESC=De forma predeterminada, la notificación se envía cuando se ejecuta este trabajo, siempre y cuando todos los trabajos anteriores de esta etapa se hayan ejecutado correctamente.<br><br>Si desea que se envíe una notificación cuando falle un trabajo anterior, añada la variable de entorno NOTIFY_JOB_STATUS a la etapa y, en el trabajo anterior, establezca <b>Detener ejecución de etapa ante un error de trabajo</b> en falso. Configure el script del trabajo anterior para exportar NOTIFY_JOB_STATUS como 0 para éxito y 1 para error. Si se establece NOTIFY_JOB_STATUS, este trabajo saldrá con uno de estos valores, de modo que la ejecución de la etapa puede ser detenida por un error anterior.

ANY_KEY=Siempre
SUCCESS_KEY=Los trabajos anteriores fueron satisfactorios
FAILURE_KEY=Los trabajos anteriores fallaron
